🐘 Initializing PostgreSQL database connection...
✅ PostgreSQL database interface ready
🔍 About to run health check...
📋 Labor roster will use existing users table
✅ PostgreSQL schemas already exist, skipping table creation
JWT_SECRET exists: true
❌ Failed to load enhanced endpoints: Cannot find module './enhanced-workflow-endpoints.js'
Require stack:
- /home/production-app/production-orders-app/server.js
🚀 Server running on http://localhost:3000
📊 Environment: development
🔐 JWT Secret: Gmqbm...
✅ New PostgreSQL client connected
🔗 Client acquired from pool
✅ New PostgreSQL client connected
🔗 Client acquired from pool
🔓 Client released back to pool
🏥 Database health check: {
  status: 'healthy',
  timestamp: 2025-08-08T13:04:22.340Z,
  version: 'PostgreSQL 16.9 (Ubuntu 16.9-0ubuntu0.24.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0, 64-bit',
  pool_total: 2,
  pool_idle: 1,
  pool_waiting: 0
}
✅ Machine availability scheduler completed
🔓 Client released back to pool
🔗 Client acquired from pool
🔓 Client released back to pool
🔗 Client acquired from pool
🔓 Client released back to pool
🔗 Client acquired from pool
🔓 Client released back to pool
🔗 Client acquired from pool
🔓 Client released back to pool
ValidationError: The Express 'trust proxy' setting is true, which allows anyone to trivially bypass IP-based rate limiting. See https://express-rate-limit.github.io/ERR_ERL_PERMISSIVE_TRUST_PROXY/ for more information.
    at Object.trustProxy (/home/production-app/production-orders-app/node_modules/express-rate-limit/dist/index.cjs:167:13)
    at wrappedValidations.<computed> [as trustProxy] (/home/production-app/production-orders-app/node_modules/express-rate-limit/dist/index.cjs:397:22)
    at Object.keyGenerator (/home/production-app/production-orders-app/node_modules/express-rate-limit/dist/index.cjs:657:20)
    at /home/production-app/production-orders-app/node_modules/express-rate-limit/dist/index.cjs:710:32
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async /home/production-app/production-orders-app/node_modules/express-rate-limit/dist/index.cjs:691:5 {
  code: 'ERR_ERL_PERMISSIVE_TRUST_PROXY',
  help: 'https://express-rate-limit.github.io/ERR_ERL_PERMISSIVE_TRUST_PROXY/'
}
🔗 Client acquired from pool
🔓 Client released back to pool
🔗 Client acquired from pool
🔓 Client released back to pool
🔐 Security Event: auth_success {
  username: 'admin',
  ip: '127.0.0.1',
  userAgent: 'curl/8.5.0',
  success: true
}
SIGTERM received, closing server...
Server closed
