# PostgreSQL Configuration for Production Orders App
# Optimized for manufacturing environment with high availability requirements

# Connection Settings
listen_addresses = '*'
port = 5432
max_connections = 200
superuser_reserved_connections = 3

# Memory Settings (adjust based on available RAM)
shared_buffers = 256MB                    # 25% of RAM for systems with 1GB+ RAM
effective_cache_size = 1GB                # 75% of available RAM
work_mem = 4MB                           # Per connection, adjust based on max_connections
maintenance_work_mem = 64MB              # For maintenance operations
dynamic_shared_memory_type = posix

# Timezone
timezone = 'Africa/Johannesburg'
log_timezone = 'Africa/Johannesburg'

# Write Ahead Logging (WAL) - Critical for production
wal_level = replica                      # Enable WAL for replication/backup
fsync = on                              # Ensure data durability
synchronous_commit = on                 # Wait for WAL write before confirming
wal_sync_method = fsync                 # Fastest reliable sync method
full_page_writes = on                   # Prevent partial page writes
wal_buffers = 16MB                      # WAL buffer size
wal_writer_delay = 200ms                # WAL writer delay

# Checkpoints (balance between recovery time and performance)
checkpoint_completion_target = 0.9       # Spread checkpoint I/O
checkpoint_timeout = 5min               # Maximum time between checkpoints
max_wal_size = 4GB                      # Maximum WAL size before forced checkpoint
min_wal_size = 1GB                      # Minimum WAL size to keep

# Query Planning
random_page_cost = 1.1                  # SSD-optimized (default 4.0 for HDD)
effective_io_concurrency = 200          # SSD concurrent I/O capability
seq_page_cost = 1.0                     # Sequential scan cost
cpu_tuple_cost = 0.01                   # CPU cost per tuple
cpu_index_tuple_cost = 0.005            # CPU cost per index tuple
cpu_operator_cost = 0.0025              # CPU cost per operator

# Background Writer (reduce checkpoint spikes)
bgwriter_delay = 200ms                  # Background writer delay
bgwriter_lru_maxpages = 100             # Pages written per round
bgwriter_lru_multiplier = 2.0           # Multiple of recent usage
bgwriter_flush_after = 512kB            # Flush OS buffers after this much

# Autovacuum (essential for production)
autovacuum = on                         # Enable automatic vacuum
log_autovacuum_min_duration = 0         # Log all autovacuum activity
autovacuum_max_workers = 3              # Number of autovacuum workers
autovacuum_naptime = 1min               # Sleep time between runs
autovacuum_vacuum_threshold = 50        # Min number of row updates before vacuum
autovacuum_analyze_threshold = 50       # Min number of row updates before analyze
autovacuum_vacuum_scale_factor = 0.2    # Fraction of table size before vacuum
autovacuum_analyze_scale_factor = 0.1   # Fraction of table size before analyze

# Statistics Collection
track_activities = on                   # Track running commands
track_counts = on                       # Track table/index access statistics
track_io_timing = on                    # Track I/O timing statistics
track_functions = all                   # Track function call statistics
default_statistics_target = 100         # Statistics detail level

# Extensions and Modules
shared_preload_libraries = 'pg_stat_statements'
pg_stat_statements.track = all          # Track all statements
pg_stat_statements.track_utility = on   # Track utility commands
pg_stat_statements.save = on            # Save stats across restarts

# Logging (essential for production monitoring)
logging_collector = on                  # Enable log collection
log_destination = 'stderr'              # Where to log
log_directory = 'log'                   # Log directory
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
log_file_mode = 0600                    # Log file permissions
log_truncate_on_rotation = off          # Don't truncate existing logs
log_rotation_age = 1d                   # Rotate logs daily
log_rotation_size = 100MB               # Rotate when logs reach 100MB

# What to Log (adjust for production vs development)
log_min_messages = warning              # Minimum message level to log
log_min_error_statement = error         # Minimum error level to log statement
log_min_duration_statement = 1000       # Log slow queries (>1 second)
log_checkpoints = on                    # Log checkpoint activity
log_connections = on                    # Log connections
log_disconnections = on                 # Log disconnections
log_lock_waits = on                     # Log lock waits
log_temp_files = 0                      # Log all temp files
log_autovacuum_min_duration = 0         # Log autovacuum activity
log_statement = 'none'                  # Don't log all statements (performance)
log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '

# Error Reporting and Formatting
client_min_messages = notice            # Client message level
log_error_verbosity = default           # Error detail level
log_hostname = off                      # Don't include hostname in logs
log_statement_stats = off               # Don't log statement statistics

# Locale and Formatting
datestyle = 'iso, ymd'                  # Date format
timezone = 'Africa/Johannesburg'        # Server timezone
lc_messages = 'en_US.UTF-8'            # Language for messages
lc_monetary = 'en_ZA.UTF-8'            # Currency formatting (South African)
lc_numeric = 'en_US.UTF-8'             # Number formatting
lc_time = 'en_ZA.UTF-8'                # Time formatting (South African)
default_text_search_config = 'pg_catalog.english'

# Connection Pooling and Timeouts
tcp_keepalives_idle = 600               # TCP keepalive idle time
tcp_keepalives_interval = 30            # TCP keepalive interval
tcp_keepalives_count = 3                # TCP keepalive probes
statement_timeout = 30000               # Statement timeout (30 seconds)
lock_timeout = 10000                    # Lock timeout (10 seconds)
idle_in_transaction_session_timeout = 300000  # Idle transaction timeout (5 minutes)

# Replication (for high availability)
archive_mode = on                       # Enable WAL archiving
archive_command = 'test ! -f /var/lib/postgresql/archive/%f && cp %p /var/lib/postgresql/archive/%f'
max_wal_senders = 3                     # Max replication connections
wal_keep_segments = 32                  # Keep WAL segments for standby
hot_standby = on                        # Allow read-only queries on standby

# Security
ssl = off                               # SSL disabled for local connections
password_encryption = scram-sha-256     # Strong password encryption

# Application-Specific Settings for Manufacturing
# These can be adjusted based on your specific workload patterns

# For high-frequency inserts (production data logging)
commit_delay = 0                        # No artificial delay
commit_siblings = 5                     # Min concurrent transactions for delay

# For reporting queries
enable_hashjoin = on                    # Enable hash joins
enable_hashagg = on                     # Enable hash aggregation
enable_mergejoin = on                   # Enable merge joins
enable_nestloop = on                    # Enable nested loop joins

# Parallel query settings (PostgreSQL 9.6+)
max_parallel_workers_per_gather = 2     # Parallel workers per query
max_parallel_workers = 8                # Total parallel workers
max_worker_processes = 8                # Max background processes

# JIT compilation (PostgreSQL 11+)
jit = on                                # Enable JIT compilation
jit_above_cost = 100000                 # JIT threshold
jit_inline_above_cost = 500000          # JIT inlining threshold
jit_optimize_above_cost = 500000        # JIT optimization threshold