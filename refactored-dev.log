🧪 Testing refactored components...
✅ New PostgreSQL client connected
🔗 Client acquired from pool
🔓 Client released back to pool
✅ Database connection: OK
✅ Authentication middleware: OK
✅ Response utilities: OK
✅ Database utilities: OK
🎉 All components tested successfully!
🌐 WebSocket server initialized
🧹 WebSocket cleanup scheduler started
🚀 Refactored server running on port 3001
📊 Health check: http://localhost:3001/api/health
🔐 Auth test: http://localhost:3001/api/auth/login
⚙️ System routes: http://localhost:3001/api/system/health
🌐 WebSocket server initialized
ValidationError: The 'X-Forwarded-For' header is set but the Express 'trust proxy' setting is false (default). This could indicate a misconfiguration which would prevent express-rate-limit from accurately identifying users. See https://express-rate-limit.github.io/ERR_ERL_UNEXPECTED_X_FORWARDED_FOR/ for more information.
    at Object.xForwardedForHeader (/home/production-app/production-orders-app/node_modules/express-rate-limit/dist/index.cjs:185:13)
    at wrappedValidations.<computed> [as xForwardedForHeader] (/home/production-app/production-orders-app/node_modules/express-rate-limit/dist/index.cjs:397:22)
    at Object.keyGenerator (/home/production-app/production-orders-app/node_modules/express-rate-limit/dist/index.cjs:658:20)
    at /home/production-app/production-orders-app/node_modules/express-rate-limit/dist/index.cjs:710:32
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async /home/production-app/production-orders-app/node_modules/express-rate-limit/dist/index.cjs:691:5 {
  code: 'ERR_ERL_UNEXPECTED_X_FORWARDED_FOR',
  help: 'https://express-rate-limit.github.io/ERR_ERL_UNEXPECTED_X_FORWARDED_FOR/'
}
🔗 Client acquired from pool
🔓 Client released back to pool
🔗 Client acquired from pool
🔓 Client released back to pool
✅ Auth success: admin from ::ffff:127.0.0.1 - curl/8.5.0
JWT verification failed: invalid signature
